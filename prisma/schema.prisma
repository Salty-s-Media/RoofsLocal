// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model products {
  id                     String      @id @default(uuid())
  name                   String
  priceInCents           Int         @map("price_in_cents")
  filePath               String      @map("file_path")
  imagePath              String      @map("image_path")
  description            String
  isAvailableForPurchase Boolean     @default(true) @map("is_available_for_purchase")
  createdAt              DateTime    @default(now()) @map("created_at")
  updatedAt              DateTime    @updatedAt @map("updated_at")
  orders                 orders[]
  downloadVerifications  downloads[]
}

model users {
  id        String   @id @default(uuid())
  email     String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  orders    orders[]
}

model orders {
  id               String   @id @default(uuid())
  pricePaidInCents Int      @map("price_paid_in_cents")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  userId    String   @map("user_id")
  productId String   @map("product_id")
  user      users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   products @relation(fields: [productId], references: [id], onDelete: Restrict)
}

model downloads {
  id        String   @id @default(uuid())
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  productId String   @map("product_id")
  product   products @relation(fields: [productId], references: [id], onDelete: Cascade)
}
